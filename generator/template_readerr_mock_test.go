// Code generated by MockGen. DO NOT EDIT.
// Source: generator/template_reader.go

// Package generator is a generated GoMock package.
package generator

import (
	structure "github.com/constructor/structure"
	gomock "github.com/golang/mock/gomock"
	template "html/template"
	reflect "reflect"
)

// MockTemplateReader is a mock of TemplateReader interface
type MockTemplateReader struct {
	ctrl     *gomock.Controller
	recorder *MockTemplateReaderMockRecorder
}

// MockTemplateReaderMockRecorder is the mock recorder for MockTemplateReader
type MockTemplateReaderMockRecorder struct {
	mock *MockTemplateReader
}

// NewMockTemplateReader creates a new mock instance
func NewMockTemplateReader(ctrl *gomock.Controller) *MockTemplateReader {
	mock := &MockTemplateReader{ctrl: ctrl}
	mock.recorder = &MockTemplateReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTemplateReader) EXPECT() *MockTemplateReaderMockRecorder {
	return m.recorder
}

// Read mocks base method
func (m *MockTemplateReader) Read(filePath structure.Path) *template.Template {
	ret := m.ctrl.Call(m, "Read", filePath)
	ret0, _ := ret[0].(*template.Template)
	return ret0
}

// Read indicates an expected call of Read
func (mr *MockTemplateReaderMockRecorder) Read(filePath interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockTemplateReader)(nil).Read), filePath)
}
