// Code generated by MockGen. DO NOT EDIT.
// Source: generator/writer.go

// Package generator is a generated GoMock package.
package generator

import (
	reflect "reflect"

	structure "github.com/constructor/structure"
	gomock "github.com/golang/mock/gomock"
)

// WriterMock is a mock of Writer interface
type WriterMock struct {
	ctrl     *gomock.Controller
	recorder *WriterMockMockRecorder
}

// WriterMockMockRecorder is the mock recorder for WriterMock
type WriterMockMockRecorder struct {
	mock *WriterMock
}

// NewWriterMock creates a new mock instance
func NewWriterMock(ctrl *gomock.Controller) *WriterMock {
	mock := &WriterMock{ctrl: ctrl}
	mock.recorder = &WriterMockMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *WriterMock) EXPECT() *WriterMockMockRecorder {
	return m.recorder
}

// Write mocks base method
func (m *WriterMock) Write(destinationPath structure.Path, content string) {
	m.ctrl.Call(m, "Write", destinationPath, content)
}

// Write indicates an expected call of Write
func (mr *WriterMockMockRecorder) Write(destinationPath, content interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*WriterMock)(nil).Write), destinationPath, content)
}
