// Code generated by MockGen. DO NOT EDIT.
// Source: generator/glob.go

// Package generator is a generated GoMock package.
package generator

import (
	structure "github.com/constructor/structure"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// FilePathFetcherMock is a mock of FilePathFetcher interface
type FilePathFetcherMock struct {
	ctrl     *gomock.Controller
	recorder *FilePathFetcherMockMockRecorder
}

// FilePathFetcherMockMockRecorder is the mock recorder for FilePathFetcherMock
type FilePathFetcherMockMockRecorder struct {
	mock *FilePathFetcherMock
}

// NewFilePathFetcherMock creates a new mock instance
func NewFilePathFetcherMock(ctrl *gomock.Controller) *FilePathFetcherMock {
	mock := &FilePathFetcherMock{ctrl: ctrl}
	mock.recorder = &FilePathFetcherMockMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *FilePathFetcherMock) EXPECT() *FilePathFetcherMockMockRecorder {
	return m.recorder
}

// sourceFilePaths mocks base method
func (m *FilePathFetcherMock) sourceFilePaths(definition structure.Definition) []structure.Path {
	ret := m.ctrl.Call(m, "sourceFilePaths", definition)
	ret0, _ := ret[0].([]structure.Path)
	return ret0
}

// sourceFilePaths indicates an expected call of sourceFilePaths
func (mr *FilePathFetcherMockMockRecorder) sourceFilePaths(definition interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "sourceFilePaths", reflect.TypeOf((*FilePathFetcherMock)(nil).sourceFilePaths), definition)
}
